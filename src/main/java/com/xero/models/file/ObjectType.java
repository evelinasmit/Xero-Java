/*
 * Xero Files API
 * These endpoints are specific to Xero Files API
 *
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.xero.models.file;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/** The Object Type */
public enum ObjectType {
  UNKNOWN("Unknown"),

  ACCPAY("Accpay"),

  ACCPAYCREDIT("AccPayCredit"),

  ACCPAYPAYMENT("AccPayPayment"),

  ACCREC("AccRec"),

  ACCRECCREDIT("AccRecCredit"),

  ACCRECPAYMENT("AccRecPayment"),

  ADJUSTMENT("Adjustment"),

  APCREDITPAYMENT("ApCreditPayment"),

  APOVERPAYMENT("ApOverPayment"),

  APOVERPAYMENTPAYMENT("ApOverPaymentPayment"),

  APOVERPAYMENTSOURCEPAYMENT("ApOverPaymentSourcePayment"),

  APPREPAYMENT("ApPrepayment"),

  APPREPAYMENTPAYMENT("ApPrepaymentPayment"),

  APPREPAYMENTSOURCEPAYMENT("ApPrepaymentSourcePayment"),

  ARCREDITPAYMENT("ArCreditPayment"),

  AROVERPAYMENT("ArOverPayment"),

  AROVERPAYMENTPAYMENT("ArOverpaymentPayment"),

  AROVERPAYMENTSOURCEPAYMENT("ArOverpaymentSourcePayment"),

  ARPREPAYMENT("ArPrepayment"),

  ARPREPAYMENTPAYMENT("ArPrepaymentPayment"),

  ARPREPAYMENTSOURCEPAYMENT("ArPrepaymentSourcePayment"),

  CASHPAID("CashPaid"),

  CASHREC("CashRec"),

  EXPPAYMENT("ExpPayment"),

  MANJOURNAL("ManJournal"),

  PURCHASEORDER("PurchaseOrder"),

  RECEIPT("Receipt"),

  TRANSFER("Transfer"),

  ACCOUNT("Account"),

  CONTACT("Contact"),

  BUSINESS("Business"),

  EMPLOYEE("Employee"),

  PERSON("Person"),

  USER("User"),

  ORG("Org"),

  FIXEDASSET("FixedAsset"),

  PAYRUN("PayRun"),

  PRICELISTITEM("PriceListItem"),

  BANK("Bank"),

  CURRENT("Current"),

  EQUITY("Equity"),

  EXPENSE("Expense"),

  FIXED("Fixed"),

  LIABILITY("Liability"),

  PREPAYMENT("Prepayment"),

  REVENUE("Revenue"),

  SALES("Sales"),

  OVERHEADS("Overheads"),

  DEPRECIATN("Depreciatn"),

  OTHERINCOME("OtherIncome"),

  DIRECTCOSTS("DirectCosts"),

  CURRLIAB("Currliab"),

  TERMLIAB("Termliab"),

  NONCURRENT("NonCurrent");

  private String value;

  ObjectType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ObjectType fromValue(String value) {
    for (ObjectType b : ObjectType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}
